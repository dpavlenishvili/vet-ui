stages:
    - backend
    - node-ssr-build
    - webserver-setup
variables:
    REMOTE_DIR: '/var/www/vet-seit.emis.ge'
    REMOTE_SSH: 'www@192.168.202.56'


Node SSR Build:
  stage: node-ssr-build
  tags:
    - docker
  only:
    - master
  artifacts:
    paths:
      - dist/
  allow_failure: false
  image: node:18-alpine
  before_script:
    - yarn install
  script:
    - yarn build:ssr

Backend Deploy:
    stage: backend
    tags:
        - oc
    only:
        - master
    allow_failure: true
    script:
        - scp -r ./* "$REMOTE_SSH":"$REMOTE_DIR"
        - ssh $REMOTE_SSH "cd $REMOTE_DIR; composer install --optimize-autoloader"
        - ssh $REMOTE_SSH "cd $REMOTE_DIR; php artisan migrate --force"
        - ssh $REMOTE_SSH "cd $REMOTE_DIR; php artisan db:seed --force"
        - ssh $REMOTE_SSH "cd $REMOTE_DIR; php artisan config:cache"
        - ssh $REMOTE_SSH "cd $REMOTE_DIR; php artisan cache:clear"
        - ssh $REMOTE_SSH "chmod -R  777 $REMOTE_DIR/storage/"
        # - ssh $REMOTE_SSH "cd $REMOTE_DIR; php artisan storage:link"
        # - ssh $REMOTE_SSH "cd $REMOTE_DIR; php artisan view:clear"

Webserver Setup:
    stage: webserver-setup
    tags:
        - oc
    only:
        - master
    needs:
        - node-ssr-build
    allow_failure: false
    before_script:
        - scp -r ./.config/nginx.conf "$REMOTE_SSH":"$REMOTE_DIR/nginx.conf"
        - ssh $REMOTE_SSH "sudo cp $REMOTE_DIR/nginx.conf /etc/nginx/conf.d/vet-seit.emis.ge.conf"
        - ssh $REMOTE_SSH "sudo systemctl restart nginx"
