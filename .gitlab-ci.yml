stages:
  - install-dependencies
  - node-ssr-build
  - lint-libraries
  - test-libraries
  - webserver-setup
  - check-approvals

variables:
  REMOTE_DIR: '/var/www/vet-seit.emis.ge'
  REMOTE_SSH: 'www@192.168.202.56'

Check Approvals:
  stage: check-approvals
  tags:
    - docker
  image: node:18-alpine
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  script:
    - node ./tools/scripts/check-approvals.js

Install dependencies:
  stage: install-dependencies
  tags:
    - docker
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  allow_failure: false
  image: node:18-alpine
  artifacts:
    paths:
      - node_modules/
  script:
    - yarn install --immutable

Build:
  needs:
    - job: Install dependencies
      artifacts: true
  stage: node-ssr-build
  tags:
    - docker
  artifacts:
    paths:
      - dist/
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  allow_failure: false
  image: node:18-alpine
  script:
    - yarn build

Lint Libraries:
  stage: lint-libraries
  needs:
    - job: Install dependencies
      artifacts: true
  tags:
    - docker
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  image: node:18-alpine
  script:
    #    - yarn nx affected -t lint --base $CI_DEFAULT_BRANCH
    - yarn nx run-many --target=lint --all

Test Libraries:
  stage: test-libraries
  needs:
    - job: Install dependencies
      artifacts: true
  tags:
    - docker
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  image: node:18-alpine
  before_script:
    - yarn nx run-many --target=generate --all
  script:
    #    - yarn nx affected -t test --base $CI_DEFAULT_BRANCH
    - yarn nx run-many --target=test --all

Webserver Setup:
  stage: webserver-setup
  tags:
    - oc
  only:
    - main
  needs:
    - job: Build
      artifacts: true
  allow_failure: false
  environment:
    name: seit
    url: https://vet-seit.emis.ge
  script:
    - ssh $REMOTE_SSH "cd $REMOTE_DIR; pm2 kill"
    - ssh $REMOTE_SSH "cd $REMOTE_DIR; rm -rf dist"
    - scp -r ./dist "$REMOTE_SSH":"$REMOTE_DIR/dist"
    - scp -r ./pm2.config.js "$REMOTE_SSH":"$REMOTE_DIR/pm2.config.js"
    - ssh $REMOTE_SSH "cd $REMOTE_DIR; pm2 start pm2.config.js"
