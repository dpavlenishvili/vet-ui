{
    "openapi": "3.0.0",
    "info": {
        "title": "VET OpenApi Documentation",
        "description": "VET Swagger OpenApi",
        "contact": {
            "email": "vsinauridze@emis.ge"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "VET API Server"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication",
                "operationId": "Login User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginResponseBody"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successful operation but need 2fa code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLogin2FaResponseBody"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Invalid credentials",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Already accepted, 2fa code still active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Already accepted",
                                            "type": "string",
                                            "default": "Already accepted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Can't send message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Can't send 2fa Code",
                                            "type": "string",
                                            "default": "Can't send 2fa Code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login/2fa": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication with 2fa code",
                "operationId": "Validate 2fa code",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "default": "password"
                                    },
                                    "code": {
                                        "description": "2fa code",
                                        "type": "string",
                                        "default": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "Access token",
                                            "type": "string",
                                            "default": "qwertyuio..."
                                        },
                                        "token_type": {
                                            "description": "Token Type",
                                            "type": "string",
                                            "default": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time",
                                            "type": "integer",
                                            "default": "3600"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Time out to validate 2fa code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Time out to validate 2fa code",
                                            "type": "string",
                                            "default": "Time out to validate 2fa code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user info",
                "operationId": "Get user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "Logout user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "true"
                                        },
                                        "msg": {
                                            "description": "Successfully logged out",
                                            "type": "string",
                                            "default": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh token",
                "operationId": "Refresh token",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "Access token",
                                            "type": "string",
                                            "default": "qwertyuio..."
                                        },
                                        "token_type": {
                                            "description": "Token Type",
                                            "type": "string",
                                            "default": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time",
                                            "type": "integer",
                                            "default": "3600"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change password for user",
                "operationId": "Change password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "default": "password"
                                    },
                                    "new_password": {
                                        "description": "New Password",
                                        "type": "string",
                                        "default": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "default": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "true"
                                        },
                                        "msg": {
                                            "description": "Password updated",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Password confirmation does not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Password confirmation does not match",
                                            "type": "string",
                                            "default": "Password confirmation does not match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Init forget password for user",
                "operationId": "Init forget password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "default": "555123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "true"
                                        },
                                        "msg": {
                                            "description": "Sms code sent",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset/save": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password for user",
                "operationId": "Reset password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "default": "555123456"
                                    },
                                    "code": {
                                        "description": "Sms code",
                                        "type": "string",
                                        "default": "1234"
                                    },
                                    "password": {
                                        "description": "New Password",
                                        "type": "string",
                                        "default": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "true"
                                        },
                                        "msg": {
                                            "description": "Password updated",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Invalid SMS code or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid Sms code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid password"
                                        },
                                        "errors": {
                                            "description": "Validation Error",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "password": {
                                                        "type": "string",
                                                        "example": "..."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "default": "[...]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password/change": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password by token for user",
                "operationId": "Reset password by token",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Token",
                                        "type": "string",
                                        "default": "qwertyuiopasdfdsgfdhgfjhgkj..."
                                    },
                                    "password": {
                                        "description": "New Password",
                                        "type": "string",
                                        "default": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "true"
                                        },
                                        "msg": {
                                            "description": "Password updated",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/countries": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "summary": "Get list of countries",
                "description": "Returns list of countries",
                "operationId": "GetCountriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "Country code",
                                                        "type": "string",
                                                        "default": "GE"
                                                    },
                                                    "name": {
                                                        "description": "Country Name",
                                                        "type": "string",
                                                        "default": "Georgia"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get list of pages",
                "description": "Returns list of pages",
                "operationId": "getPagesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagesRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "List of menus",
                "description": "Returns list of menus data",
                "operationId": "menus",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/collection/{id}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get collection items",
                "description": "Returns items of page colections",
                "operationId": "Collections Items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Collection id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionItemsRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUserList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReq"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReq"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/register/validate": {
            "get": {
                "tags": [
                    "Register"
                ],
                "summary": "Validate Person",
                "description": "Validate person by Personal Id and Last name",
                "operationId": "ValidatePerson",
                "parameters": [
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "Personal ID",
                        "required": true,
                        "example": "01000000000"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name",
                        "required": true,
                        "example": "Doe"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "firstName": {
                                            "description": "First name",
                                            "type": "string",
                                            "default": "John"
                                        },
                                        "birthDate": {
                                            "description": "Birth date",
                                            "type": "string",
                                            "default": "1999-12-31"
                                        },
                                        "gender": {
                                            "description": "Gender",
                                            "type": "string",
                                            "default": "male"
                                        },
                                        "photo": {
                                            "description": "photo of user",
                                            "type": "string",
                                            "default": "base64 string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Person not validated",
                                            "type": "boolean",
                                            "default": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Person already registered",
                                            "type": "boolean",
                                            "default": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/send": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Send one time code",
                "description": "Send one time code to validate phone number",
                "operationId": "Send Sms code",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Phone Number",
                        "required": true,
                        "example": "555123456"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Send sms code",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Sms send failed",
                                            "type": "boolean",
                                            "default": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/validate": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "Validate SMS code",
                "description": "Validate SMS code",
                "operationId": "validate Sms",
                "requestBody": {
                    "description": "Validate SMS code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "sms_code"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "default": "555123456"
                                    },
                                    "sms_code": {
                                        "description": "SMS code",
                                        "type": "string",
                                        "default": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Send sms code",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "SMS code not valid",
                                            "type": "boolean",
                                            "default": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register user",
                "description": "Returns user data",
                "operationId": "Register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReq"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "2fa code not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "2fa code not valid",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "2fa code not valid",
                                            "type": "string",
                                            "default": "2fa code not valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CollectionItem": {
                "title": "Collection Item",
                "description": "Collection Item",
                "properties": {
                    "slug": {
                        "title": "Slug",
                        "description": "Slug",
                        "type": "string",
                        "example": "contact-us"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Item title",
                        "type": "string",
                        "example": "naxes ucxo moyme vinme"
                    },
                    "meta_title": {
                        "title": "Meta title",
                        "description": "Page meta title",
                        "type": "string",
                        "example": "naxes ucxo moyme vinme"
                    },
                    "content": {
                        "title": "Content",
                        "description": "Page content",
                        "type": "string",
                        "example": "<p>Hello world</p>"
                    },
                    "meta_description": {
                        "title": "Meta description",
                        "description": "Page meta description",
                        "type": "string",
                        "example": "Hello world"
                    },
                    "image": {
                        "title": "Image",
                        "description": "MPage main banner/poster",
                        "type": "string",
                        "example": "http://..."
                    },
                    "created_at": {
                        "title": "Create at",
                        "description": "Page creation date time",
                        "type": "string",
                        "example": "2024-12-30 13:00:00"
                    },
                    "pin": {
                        "title": "Pin",
                        "description": "Pinned items",
                        "type": "boolean"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Collection item"
                }
            },
            "MediaItem": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "/uploads/1/sample-Document.pdf\","
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Document.pdf"
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "application/pdf"
                    },
                    "size": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "order_column": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "MenuItem": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Top menu"
                    }
                },
                "type": "object"
            },
            "Page": {
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "collection_id": {
                        "description": "Attached collection",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Page title",
                        "type": "string",
                        "example": "Contact us"
                    },
                    "meta_title": {
                        "description": "Page meta title",
                        "type": "string",
                        "example": "Contact us"
                    },
                    "content": {
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "Page meta description",
                        "type": "string"
                    },
                    "image": {
                        "description": "MPage main banner/poster",
                        "type": "string"
                    },
                    "position": {
                        "description": "Page index for ordering purposes",
                        "type": "integer"
                    },
                    "parent_id": {
                        "description": "Parent page ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Page creation date time",
                        "type": "string"
                    },
                    "menus": {
                        "title": "Menus",
                        "description": "Relations of menus",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItem"
                        }
                    },
                    "media": {
                        "title": "Medias",
                        "description": "Relations of attachments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaItem"
                        }
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "pid": {
                        "title": "Personal ID",
                        "description": "Personal ID of the user",
                        "type": "string",
                        "example": "01000000000"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Fullname of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "firstName": {
                        "title": "First name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "title": "Last name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "gender of the user",
                        "type": "string",
                        "example": "Male"
                    },
                    "birthDate": {
                        "title": "Birth date",
                        "description": "Birth date of the user",
                        "type": "string",
                        "format": "date",
                        "example": "1999-12-31"
                    },
                    "residential": {
                        "title": "Residential",
                        "description": "Residential of the user",
                        "type": "string",
                        "example": "GE"
                    },
                    "region": {
                        "title": "Region",
                        "description": "Region of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "Robert Robertson, 1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "altPhone": {
                        "title": "Alternative phone",
                        "description": "Alternative phone of the user",
                        "type": "string",
                        "example": "555123456",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email",
                        "example": "example@example.com",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo of the user",
                        "type": "string",
                        "example": "/users/photos/qwertyuio.jpg",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "isActive": {
                        "title": "Is active",
                        "description": "Is active user",
                        "type": "boolean",
                        "format": "bool",
                        "example": false
                    },
                    "blockReason": {
                        "title": "Block reason",
                        "description": "Block reason of user",
                        "type": "string",
                        "example": "Some reason",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-27 17:50:45"
                    },
                    "deletedAt": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "LoginRequestBody": {
                "required": [
                    "pid",
                    "password"
                ],
                "properties": {
                    "pid": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CollectionItemsRes": {
                "title": "collectionItemResource",
                "description": "Collection items resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionItem"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "collectionItemsResource"
                }
            },
            "PagesRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    }
                },
                "type": "object"
            },
            "UserLogin2FaResponseBody": {
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "phone_mask": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserLoginResponseBody": {
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserRes": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "UsersRes": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "UserReq": {
                "title": "User request",
                "description": "User request body data",
                "required": [
                    "pid",
                    "phone",
                    "first_name",
                    "last_name",
                    "gender",
                    "birth_date",
                    "residential"
                ],
                "properties": {
                    "pid": {
                        "title": "Personal Id",
                        "description": "Personal Id of project",
                        "type": "string",
                        "example": "01000000000"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone number",
                        "type": "string",
                        "example": "555123456"
                    },
                    "first_name": {
                        "title": "First name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "gender of the user",
                        "type": "string",
                        "example": "male",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "birth_date": {
                        "title": "Birth date",
                        "description": "Birth date of the user",
                        "type": "string",
                        "format": "date",
                        "example": "1999-12-31"
                    },
                    "residential": {
                        "title": "Residential",
                        "description": "Residential of the user",
                        "type": "string",
                        "example": "GE"
                    },
                    "region": {
                        "title": "Region",
                        "description": "Region of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "Robert Robertson, 1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "alt_phone": {
                        "title": "Alternative phone",
                        "description": "Alternative phone of the user",
                        "type": "string",
                        "example": "555123456",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email",
                        "example": "example@example.com",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "sms_code": {
                        "title": "Sms code",
                        "description": "2fa code of the user",
                        "type": "string",
                        "example": "1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photo": {
                        "title": "Password confirmation",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "password",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password_confirmation": {
                        "title": "Photo",
                        "description": "Photo of the user",
                        "type": "string",
                        "example": "base64 string",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        "examples": {
            "default | static | page": {
                "summary": "Page type"
            },
            "2024-12-30 13:00:00": {
                "summary": "Page creation date time"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "VET",
            "description": "API Endpoints of Projects"
        }
    ]
}