{
    "openapi": "3.0.0",
    "info": {
        "title": "VET OpenApi Documentation",
        "description": "VET Swagger OpenApi",
        "contact": {
            "email": "vsinauridze@emis.ge"
        },
        "version": "1.1.0"
    },
    "servers": [
        {
            "url": "https://dev-api-vet.emis.ge/api/v1",
            "description": "VET API Server"
        }
    ],
    "paths": {
        "/admission": {
            "get": {
                "tags": [
                    "Admission"
                ],
                "summary": "List of short-term programs",
                "description": "Returns list of requested admissions",
                "operationId": "Admission list",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Admission Number",
                        "required": false
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Registraction date range",
                        "required": false,
                        "example": "2025-01-01 - 2025-12-31"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Admission Status",
                        "required": false,
                        "example": "draft"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Admission search",
                        "required": false,
                        "example": "*"
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "Organisation code",
                        "required": false,
                        "example": "1234"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Selected role",
                        "required": true,
                        "example": "Default User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionsRes"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admission"
                ],
                "summary": "User Admission",
                "description": "User admission on programs",
                "operationId": "Admission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Error message",
                                            "type": "string",
                                            "default": "Program not eligible"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admission/{id}": {
            "put": {
                "tags": [
                    "Admission"
                ],
                "summary": "Edit Admission",
                "description": "Edit User admission on program",
                "operationId": "Edit admission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admission ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdmissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdmissionRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Error message",
                                            "type": "string",
                                            "default": "Programss not eligible"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admission"
                ],
                "summary": "Delete Admission",
                "description": "Delete User admission request",
                "operationId": "DeleteAdmission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "admission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "status",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "options": {
                "tags": [
                    "Admission"
                ],
                "summary": "List of eligible programs",
                "description": "Returns list of eligible Programs",
                "operationId": "Eligible Programs list",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admission ID",
                        "required": true
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter programs",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LongTermsRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admission/student-status": {
            "get": {
                "tags": [
                    "Admission"
                ],
                "summary": "Student status",
                "description": "Check if user has active student status",
                "operationId": "StudentStatus",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_eligible": {
                                            "description": "status",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admission/education-status": {
            "get": {
                "tags": [
                    "Admission"
                ],
                "summary": "Education status",
                "description": "Get user education level",
                "operationId": "EducationStatus",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "level": {
                                            "description": "Education level",
                                            "type": "string",
                                            "default": "ბაკალავრი"
                                        },
                                        "levelId": {
                                            "description": "Education level ID",
                                            "type": "integer",
                                            "default": 6
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/applicants": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "List of applicants",
                "description": "List of applicants.",
                "operationId": "getApplicants",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all_applicants",
                        "in": "query",
                        "description": "All applicants",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of applicants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicantCollectionRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/applications": {
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Accept the terms on application",
                "description": "Accept the terms on application.",
                "operationId": "updateApplication",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Terms accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Terms accepted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Application not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Create or update the application",
                "description": "Handle the incoming request.",
                "operationId": "storeApplication",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationReq"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationResourceRes"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Application"
                ],
                "summary": "Destroy the application",
                "description": "Destroy the application.",
                "operationId": "deleteApplication",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Application deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Application deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Application not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication",
                "operationId": "Login User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginResponseBody"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successful operation but need 2fa code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLogin2FaResponseBody"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Invalid credentials",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "description": "Too many attempts",
                                            "type": "string",
                                            "default": "Too many attempts"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Already accepted, 2fa code still active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Already accepted",
                                            "type": "string",
                                            "default": "Already accepted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Can't send message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": "false"
                                        },
                                        "msg": {
                                            "description": "Can't send 2fa Code",
                                            "type": "string",
                                            "default": "Can't send 2fa Code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login/2fa": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication with 2fa code",
                "operationId": "Validate 2fa code",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateCodeRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginResponseBody"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Time out to validate 2fa code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "description": "Time out to validate 2fa code",
                                            "type": "string",
                                            "example": "Time out to validate 2fa code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user info",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "LogoutUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "msg": {
                                            "description": "Successfully logged out",
                                            "type": "string",
                                            "default": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh token",
                "operationId": "Refresh token",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "description": "The refresh token to generate a new access token.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginResponseBody"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change password for user",
                "operationId": "ChangePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "default": "password"
                                    },
                                    "new_password": {
                                        "description": "New Password",
                                        "type": "string",
                                        "default": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "default": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "msg": {
                                            "description": "Password updated",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Password confirmation does not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Password confirmation does not match",
                                            "type": "string",
                                            "default": "Password confirmation does not match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Init forget password for user",
                "operationId": "InitForgetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "default": "555123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "msg": {
                                            "description": "Sms code sent",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset/save": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password for user",
                "operationId": "ResetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pid": {
                                        "description": "Personal ID",
                                        "type": "string",
                                        "default": "010000000000"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "default": "555123456"
                                    },
                                    "code": {
                                        "description": "Sms code",
                                        "type": "string",
                                        "default": "1234"
                                    },
                                    "password": {
                                        "description": "New Password",
                                        "type": "string",
                                        "default": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "msg": {
                                            "description": "Password updated",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Invalid SMS code or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid Sms code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "msg": {
                                            "description": "Message",
                                            "type": "string",
                                            "default": "Invalid password"
                                        },
                                        "errors": {
                                            "description": "Validation Error",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "password": {
                                                        "type": "string",
                                                        "example": "..."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "default": "[...]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password/change": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password by token for user",
                "operationId": "ResetPasswordByToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Token",
                                        "type": "string",
                                        "default": "qwertyuiopasdfdsgfdhgfjhgkj..."
                                    },
                                    "password": {
                                        "description": "New Password",
                                        "type": "string",
                                        "default": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "msg": {
                                            "description": "Password updated",
                                            "type": "string",
                                            "default": "Password updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commission": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "list of organisation and commission memebers",
                "description": "list of organisation and commission memebers",
                "operationId": "list of organisation and commission memebers",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "organisation ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramsWithCommissionsRes"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Commission"
                ],
                "summary": "Assign commission member to a program",
                "description": "Assigns a list of users (by their PIDs) to a specific program commission. The program must exist, and the number of users should be between 3 and 6.",
                "operationId": "createProgramCommission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "organisation ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program": {
                                        "description": "ID of the program",
                                        "type": "string"
                                    },
                                    "pids": {
                                        "description": "List of Personal IDs of users",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Commission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "description": "Indicates if the operation was successful",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or program not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Indicates if the operation was successful",
                                            "type": "boolean"
                                        },
                                        "msg": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "error": {
                                            "properties": {
                                                "code": {
                                                    "description": "Error code",
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "description": "Error description",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commission-check": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "Find commision member",
                "description": "Returns commission member",
                "operationId": "Find Commission member",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "Personal ID",
                        "required": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of commission member",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission member data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "pid": {
                                                    "description": "Personal ID of the member",
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "description": "First name of the member",
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "description": "Last name of the member",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "Phone number of the member",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commission member not found"
                    }
                }
            }
        },
        "/commission/criteria": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "List of motivational criterias",
                "operationId": "MotivationalCriteria",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "admission",
                        "in": "query",
                        "description": "Admission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission motivational criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "კრიტერიუმის სახელი"
                                                    },
                                                    "min_score": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "max_score": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "order": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "score": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commission/scores": {
            "post": {
                "tags": [
                    "Commission"
                ],
                "summary": "Set motivational scores",
                "operationId": "setScores",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "admission": {
                                        "description": "ID of the admission",
                                        "type": "integer"
                                    },
                                    "program": {
                                        "description": "ID of the program",
                                        "type": "integer"
                                    },
                                    "scores": {
                                        "description": "Scores",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "criteria_id": {
                                                    "description": "Score ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "score": {
                                                    "description": "Score value",
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Commission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "description": "Indicates if the operation was successful",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commission/review": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "Commission review list",
                "operationId": "commissionReview",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "organisation ID",
                        "required": true
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter programs",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionsReview"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commission/results": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "Commission results list",
                "operationId": "commissionResult",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "organisation ID",
                        "required": true
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter programs",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionsReview"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam-card": {
            "get": {
                "tags": [
                    "Card"
                ],
                "summary": "Exam card",
                "description": "Returns Exam card",
                "operationId": "ExamCard",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "admission",
                        "in": "query",
                        "description": "Admission ID",
                        "required": false
                    },
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "User PID",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardDataRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vacancies/favorites": {
            "get": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "List of favorite vacancies",
                "description": "Handle the incoming request.",
                "operationId": "getFavorites",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "description": "Region ID",
                        "required": false
                    },
                    {
                        "name": "district_id",
                        "in": "query",
                        "description": "District ID",
                        "required": false
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "Institution",
                        "required": false
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "Position",
                        "required": false
                    },
                    {
                        "name": "modules",
                        "in": "query",
                        "description": "Modules",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VacancyCollectionRes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Application not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/countries": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "summary": "Get list of countries",
                "description": "Returns list of countries",
                "operationId": "GetCountriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "Country code",
                                                        "type": "string",
                                                        "default": "GE"
                                                    },
                                                    "name": {
                                                        "description": "Country Name",
                                                        "type": "string",
                                                        "default": "Georgia"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/regions": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "summary": "Get list of regions",
                "description": "Returns list of regions",
                "operationId": "GetRegionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID",
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "name": {
                                                        "description": "Region name",
                                                        "type": "string",
                                                        "default": "Tbilisi"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/districts": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "summary": "Get list of districts",
                "description": "Returns list of districts",
                "operationId": "GetDistrictsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID",
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "name": {
                                                        "description": "District name",
                                                        "type": "string",
                                                        "default": "Tbilisi"
                                                    },
                                                    "region_id": {
                                                        "description": "Region id",
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "region_name": {
                                                        "description": "Region name",
                                                        "type": "string",
                                                        "default": "აჭარა"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/organisations": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "summary": "Get list of organisations",
                "description": "Returns list of organisations",
                "operationId": "GetOrganisationsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID",
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "name": {
                                                        "description": "Organisation name",
                                                        "type": "string"
                                                    },
                                                    "region_id": {
                                                        "description": "Region ID",
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "district_id": {
                                                        "description": "District ID",
                                                        "type": "integer",
                                                        "default": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/var": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "summary": "Get All configs",
                "description": "Returns all configs",
                "operationId": "GetAllConfigs",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Filter Key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_type",
                        "in": "query",
                        "description": "Program Type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "organisation code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "institution_types": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "კერძო"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "languages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "ქართული"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "education_levels": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "2"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "საბაზო"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "program_types": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "დუალური"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "selection_methods": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "16"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "რაოდენობრივი წიგნიერება"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "selection_categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "ძირითადი შერჩევის მეთოდი"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "financing_types": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "საბიუჯეტო"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "institution_legal_types": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "ინდივიდუალური მეწარმე"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "programs": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "organisations": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/general/translate": {
            "get": {
                "tags": [
                    "Generals"
                ],
                "operationId": "translate",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "აზერბაიჯანულად"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/non-formals": {
            "get": {
                "tags": [
                    "Non-formal"
                ],
                "summary": "List of non-formals",
                "description": "Returns list of non-formals",
                "operationId": "non-formals",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NonFormalsRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/non-formals/{id}": {
            "get": {
                "tags": [
                    "Non-formal"
                ],
                "summary": "non-formals object",
                "description": "Returns object of non-formal",
                "operationId": "non-formal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "non-formal id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NonFormalRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get list of pages",
                "description": "Returns list of pages",
                "operationId": "getPagesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagesRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "List of menus",
                "description": "Returns list of menus data",
                "operationId": "menus",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "description": "name of the menu",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/collection/{id}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get collection items",
                "description": "Returns items of page collections",
                "operationId": "Collections Items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Collection id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionItemsRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/collection-item/{collectionItemId}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get single collection item",
                "operationId": "getSingleCollectionItem",
                "parameters": [
                    {
                        "name": "collectionItemId",
                        "in": "path",
                        "description": "Collection item id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionItem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/partners": {
            "get": {
                "tags": [
                    "Partner"
                ],
                "summary": "List of partners",
                "description": "Returns list of partners",
                "operationId": "partners",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartnerRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programs": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "List of programs",
                "description": "Returns list of programs",
                "operationId": "programs",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter programs",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LongTermsRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programs/{id}": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Program object",
                "description": "Returns object of program",
                "operationId": "program",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Program id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LongTermRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Programs schedules and results",
                "description": "Returns schedules and results",
                "operationId": "Schedules",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "Organisation code",
                        "required": false
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter programs",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduleRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules/{id}/dates": {
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Set dates and address of exam",
                "description": "Set dates and address of exam",
                "operationId": "Schedules dates",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "selection_method_id": {
                                            "type": "integer"
                                        },
                                        "start_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "address": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Commission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "description": "Indicates if the operation was successful",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules/{id}/scores": {
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Set scores of exam",
                "description": "Set scores of exam",
                "operationId": "Schedules scores",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "selection_method_id": {
                                            "type": "integer"
                                        },
                                        "score": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Commission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "description": "Indicates if the operation was successful",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules/{id}/grant/{isGranted}": {
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Set grant of exam",
                "description": "Set granted status",
                "operationId": "Schedules grant",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isGranted",
                        "in": "path",
                        "description": "Is granted",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Granted status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "description": "Indicates if the operation was successful",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programs/short/admissions": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "List of short program admissions",
                "description": "Returns list of short program admissions",
                "operationId": "programs-short-admissions",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter short program admissions",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramShortAdmissionRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programs/short/application": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "List of short program applications",
                "description": "Returns list of short program applications",
                "operationId": "programs-short-applications",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter short program applications",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramShortAdmissionRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programs/short": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "List of short programs",
                "description": "Returns list of short programs",
                "operationId": "programs-short",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter short programs",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortProgramRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programs/short/{id}": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Program short object",
                "description": "Returns object of short program",
                "operationId": "program-short",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Program id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortProgramShowRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Programs Statistics",
                "description": "Returns space statistic",
                "operationId": "Statistics",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    },
                    {
                        "name": "organisation",
                        "in": "query",
                        "description": "Organisation ID",
                        "required": false
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "Program ID",
                        "required": false
                    },
                    {
                        "name": "kind",
                        "in": "query",
                        "description": "Program Kind",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatRes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUserList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReq"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateReq"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/register/validate": {
            "get": {
                "tags": [
                    "Register"
                ],
                "summary": "Validate Person",
                "description": "Validate person by Personal Id and Last name",
                "operationId": "ValidatePerson",
                "parameters": [
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "Personal ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "01000000000"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Doe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "firstName": {
                                            "description": "First name",
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "birthDate": {
                                            "description": "Birth date",
                                            "type": "string",
                                            "example": "1999-12-31"
                                        },
                                        "gender": {
                                            "description": "Gender",
                                            "type": "string",
                                            "example": "male"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Person not validated",
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Person already registered",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Person already registered",
                                            "type": "string"
                                        },
                                        "can_register": {
                                            "description": "Can continue register",
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/send": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Send one time code",
                "description": "Send one time code to validate phone number",
                "operationId": "SendSmsCode",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Phone Number",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "555123456"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Auth temporary token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Send sms code",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Sms send failed",
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/validate": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "Validate SMS code",
                "description": "Validate SMS code",
                "operationId": "validateSms",
                "requestBody": {
                    "description": "Validate SMS code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "sms_code"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "example": "555123456"
                                    },
                                    "sms_code": {
                                        "description": "SMS code",
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Send sms code",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "SMS code not valid",
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register user",
                "description": "Returns user data",
                "operationId": "Register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserReq"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "2fa code not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "2fa code not valid",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "description": "2fa code not valid",
                                            "type": "string",
                                            "example": "2fa code not valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "List of user roles",
                "description": "Returns list of user roles",
                "operationId": "roles",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "roles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "organisation": {
                                                "type": "string"
                                            },
                                            "permissions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vacancies/agreement/validate": {
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Validate the vacancy agreement",
                "description": "Handle the incoming request.",
                "operationId": "validateVacancyAgreement",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hourly_pay_from": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "hourly_pay_to": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "hourly_workload_from": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "hourly_workload_to": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "publish_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "deadline_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Validation successful"
                    },
                    "500": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "modules is required. /path/to/file.php"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vacancies": {
            "get": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Get all vacancies",
                "description": "Display a listing of the resource.",
                "operationId": "getVacancies",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "description": "Region ID",
                        "required": false
                    },
                    {
                        "name": "district_id",
                        "in": "query",
                        "description": "District ID",
                        "required": false
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "Institution",
                        "required": false
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "Position",
                        "required": false
                    },
                    {
                        "name": "modules",
                        "in": "query",
                        "description": "Modules",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VacancyCollectionRes"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Store a newly created resource in storage.",
                "description": "Store a newly created resource in storage.",
                "operationId": "createVacancy",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VacancyReq"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VacancyResourceRes"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vacancies/{vacancy}": {
            "get": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Display the specified resource.",
                "description": "Display the specified resource.",
                "operationId": "getVacancy",
                "parameters": [
                    {
                        "name": "vacancy",
                        "in": "path",
                        "description": "Vacancy ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VacancyResourceRes"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Update the specified resource in storage.",
                "description": "Update the specified resource in storage.",
                "operationId": "updateVacancy",
                "parameters": [
                    {
                        "name": "vacancy",
                        "in": "path",
                        "description": "Vacancy ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VacancyReq"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VacancyResourceRes"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Remove the specified resource from storage.",
                "description": "Remove the specified resource from storage.",
                "operationId": "deleteVacancy",
                "parameters": [
                    {
                        "name": "vacancy",
                        "in": "path",
                        "description": "Vacancy ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vacancies/details/validate": {
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Validate the vacancy details",
                "description": "Handle the incoming request.",
                "operationId": "validateVacancyDetails",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "position_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "მასწავლებელი"
                                    },
                                    "teaching_professional_programs": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "teaching_short_term_programs": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "modules": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "programs": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "თბილისი, სამთავროს ქუჩა 1"
                                    },
                                    "contact_person": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Validation successful"
                    },
                    "500": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "modules is required. /path/to/file.php"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vacancies/selection/validate": {
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Validate the vacancy selection",
                "description": "Handle the incoming request.",
                "operationId": "validateVacancySelection",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "selection_stages": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "vacant_places": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "work_format": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "responsibilities": {
                                        "type": "string",
                                        "example": "პროგრამის გამოწვევა"
                                    },
                                    "basic_requirements": {
                                        "type": "string",
                                        "example": "პროგრამის გამოწვევა"
                                    },
                                    "essential_requirements": {
                                        "type": "string",
                                        "example": "პროგრამის გამოწვევა"
                                    },
                                    "optional_requirements": {
                                        "type": "string",
                                        "example": "პროგრამის გამოწვევა"
                                    },
                                    "additional_information": {
                                        "type": "string",
                                        "example": "პროგრამის გამოწვევა"
                                    },
                                    "obtaining_authorization": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Validation successful"
                    },
                    "500": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "modules is required. /path/to/file.php"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AdmissionRequest": {
                "required": [
                    "program_ids",
                    "education",
                    "district_id",
                    "language"
                ],
                "properties": {
                    "program_ids": {
                        "description": "Program IDS",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "default": "[1,2,3]"
                    },
                    "education": {
                        "description": "Education level",
                        "type": "string",
                        "default": "Education"
                    },
                    "district_id": {
                        "description": "District ID",
                        "type": "integer",
                        "default": 1
                    },
                    "language": {
                        "description": "Language code",
                        "type": "string",
                        "default": "KA"
                    },
                    "doc": {
                        "description": "PDF base 64 code",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "File id",
                                    "type": "integer",
                                    "example": "1"
                                },
                                "filename": {
                                    "description": "File name",
                                    "type": "string",
                                    "example": "filename.jpg"
                                },
                                "base64": {
                                    "description": "Base64 encoded file content",
                                    "type": "string",
                                    "example": "base64"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "spec_edu": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "boolean"
                    },
                    "e_name": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "string",
                        "default": "name of contact person"
                    },
                    "e_lastname": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "string",
                        "default": "last name of contact person"
                    },
                    "e_email": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "string",
                        "default": "email of contact person"
                    },
                    "e_phone": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "string",
                        "default": "phone number of contact person"
                    },
                    "spe_description": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "string",
                        "default": "special education description"
                    },
                    "translate": {
                        "description": "(translate) if checked then pass value",
                        "type": "string",
                        "default": "translate language"
                    },
                    "translate_select": {
                        "description": "(translate) if checked then pass value of select box",
                        "type": "string",
                        "default": "translate select value"
                    },
                    "spec_env": {
                        "description": "(Spec Environment) If checked, then pass value for the environments like lift and ramp.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "abroad_doc": {
                        "description": "(Abroad pass any education) if checked then pass value",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "File id",
                                    "type": "integer",
                                    "example": "1"
                                },
                                "filename": {
                                    "description": "File name",
                                    "type": "string",
                                    "example": "filename.jpg"
                                },
                                "base64": {
                                    "description": "Base64 encoded file content",
                                    "type": "string",
                                    "example": "base64"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "ocu_doc": {
                        "description": "(Occupied region pass any education) if checked then pass value",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "File id",
                                    "type": "integer",
                                    "example": "1"
                                },
                                "filename": {
                                    "description": "File name",
                                    "type": "string",
                                    "example": "filename.jpg"
                                },
                                "base64": {
                                    "description": "Base64 encoded file content",
                                    "type": "string",
                                    "example": "base64"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "status": {
                        "description": "Send 'registered' if user finishes the flow",
                        "type": "string",
                        "default": "registered"
                    },
                    "complete_edu_abroad": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "boolean"
                    },
                    "complete_base_edu_abroad": {
                        "description": "(Spec Education) if checked then pass value",
                        "type": "boolean"
                    },
                    "education_level": {
                        "description": "User education level text",
                        "type": "string"
                    },
                    "education_level_id": {
                        "description": "User education level id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Admission": {
                "properties": {
                    "admission_id": {
                        "type": "integer"
                    },
                    "min_allowed_education_level_id": {
                        "type": "integer"
                    },
                    "min_allowed_age": {
                        "type": "string"
                    },
                    "program_fee": {
                        "type": "string"
                    },
                    "student_fee": {
                        "type": "string"
                    },
                    "has_college_exam": {
                        "type": "boolean"
                    },
                    "financing_type_id": {
                        "type": "integer"
                    },
                    "registration_start_date": {
                        "type": "string"
                    },
                    "registration_end_date": {
                        "type": "string"
                    },
                    "study_start_date": {
                        "type": "integer"
                    },
                    "study_end_date": {
                        "type": "string"
                    },
                    "students_limit": {
                        "type": "integer"
                    },
                    "inclusive_students_limit": {
                        "type": "integer"
                    },
                    "exam_language_id": {
                        "type": "integer"
                    },
                    "is_universal": {
                        "type": "boolean"
                    },
                    "other_requirements": {
                        "type": "string"
                    },
                    "step": {
                        "type": "string"
                    },
                    "selection": {
                        "title": "Selection",
                        "description": "Relations of selection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Selection"
                        }
                    }
                },
                "type": "object"
            },
            "AdmissionPrograms": {
                "properties": {
                    "select": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "program": {
                        "$ref": "#/components/schemas/LongTerm"
                    }
                },
                "type": "object"
            },
            "AdmissionReq": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "education": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "district": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "language": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "doc": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "spec_edu": {
                        "type": "boolean"
                    },
                    "e_name": {
                        "type": "string"
                    },
                    "e_phone": {
                        "type": "string"
                    },
                    "e_email": {
                        "type": "string"
                    },
                    "e_lastname": {
                        "type": "string"
                    },
                    "spe_description": {
                        "type": "string"
                    },
                    "spec_env": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "abroad_doc": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "ocu_doc": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "complete_edu_abroad": {
                        "type": "boolean"
                    },
                    "complete_base_edu_abroad": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "string"
                    },
                    "education_level": {
                        "type": "string"
                    },
                    "education_level_id": {
                        "type": "integer"
                    },
                    "translate": {
                        "type": "string"
                    },
                    "rofficer_status": {
                        "type": "string"
                    },
                    "rofficer_doc": {
                        "type": "string"
                    },
                    "translate_select": {
                        "type": "string"
                    },
                    "actions": {
                        "$ref": "#/components/schemas/KeyVal"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KeyVal"
                    },
                    "programs": {
                        "title": "Programs",
                        "description": "Relations to programs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionPrograms"
                        }
                    }
                },
                "type": "object"
            },
            "ApplicantCollection": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "institutions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "positions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "positions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "institutions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "allow_email_notifications": {
                        "type": "boolean"
                    },
                    "allow_review_personal_page": {
                        "type": "boolean"
                    },
                    "file": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CardPrograms": {
                "properties": {
                    "programs": {
                        "$ref": "#/components/schemas/LongTerm"
                    },
                    "start_at": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CollectionItem": {
                "title": "Collection Item",
                "description": "Collection Item",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "Slug",
                        "type": "string",
                        "example": "contact-us"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Item title",
                        "type": "string",
                        "example": "naxes ucxo moyme vinme"
                    },
                    "meta_title": {
                        "title": "Meta title",
                        "description": "Page meta title",
                        "type": "string",
                        "example": "naxes ucxo moyme vinme"
                    },
                    "content": {
                        "title": "Content",
                        "description": "Page content",
                        "type": "string",
                        "example": "<p>Hello world</p>"
                    },
                    "meta_description": {
                        "title": "Meta description",
                        "description": "Page meta description",
                        "type": "string",
                        "example": "Hello world"
                    },
                    "image": {
                        "title": "Image",
                        "description": "MPage main banner/poster",
                        "type": "string",
                        "example": "http://..."
                    },
                    "created_at": {
                        "title": "Create at",
                        "description": "Page creation date time",
                        "type": "string",
                        "example": "2024-12-30 13:00:00"
                    },
                    "pin": {
                        "title": "Pin",
                        "description": "Pinned items",
                        "type": "boolean"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Collection item"
                }
            },
            "CommissionResult": {
                "properties": {
                    "completed": {
                        "type": "boolean"
                    },
                    "comission_member": {
                        "$ref": "#/components/schemas/User"
                    },
                    "scores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionScore"
                        }
                    }
                },
                "type": "object"
            },
            "CommissionReview": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "select": {
                        "type": "boolean"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "program": {
                        "$ref": "#/components/schemas/LongTerm"
                    },
                    "admission": {
                        "$ref": "#/components/schemas/AdmissionReq"
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionReviews"
                        }
                    },
                    "result": {
                        "$ref": "#/components/schemas/ResultReview"
                    }
                },
                "type": "object"
            },
            "CommissionReviews": {
                "properties": {
                    "results": {
                        "$ref": "#/components/schemas/CommissionResult"
                    }
                },
                "type": "object"
            },
            "CommissionScore": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string"
                    },
                    "min_score": {
                        "type": "string"
                    },
                    "max_score": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CommissionsReview": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionReview"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "description": "Filters applied to admissions.",
                                    "type": "string",
                                    "example": "text"
                                },
                                "selected": {
                                    "type": "string",
                                    "example": null,
                                    "nullable": true
                                },
                                "key": {
                                    "type": "string",
                                    "example": "program_name"
                                },
                                "values": {
                                    "type": "string",
                                    "example": "*"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "File": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "download_url": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "string"
                    },
                    "base64": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IdName": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "KeyVal": {
                "properties": {
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LongTerm": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "specialization_code": {
                        "type": "string"
                    },
                    "specialization_name": {
                        "type": "string"
                    },
                    "isced_code": {
                        "type": "string"
                    },
                    "isced_description": {
                        "type": "string"
                    },
                    "qualification_name": {
                        "type": "string"
                    },
                    "program_code": {
                        "type": "string"
                    },
                    "program_kind": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "address": {
                        "type": "string"
                    },
                    "credits_count": {
                        "type": "string"
                    },
                    "credits_count_non_geo": {
                        "type": "string"
                    },
                    "education_level": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "language_id": {
                        "type": "integer"
                    },
                    "is_integrated": {
                        "type": "boolean"
                    },
                    "region": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "district": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "program_duration": {
                        "type": "string"
                    },
                    "program_duration_non_geo": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "partner": {
                        "type": "string"
                    },
                    "video_url": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "is_eligible": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "registered": {
                        "$ref": "#/components/schemas/RegistereCount"
                    },
                    "gallery": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "partners": {
                        "title": "partners",
                        "description": "Relations of partners",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramPartner"
                        }
                    },
                    "organisation": {
                        "type": "object"
                    },
                    "admission": {
                        "$ref": "#/components/schemas/Admission"
                    }
                },
                "type": "object"
            },
            "MediaItem": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "/uploads/1/sample-Document.pdf\","
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Document.pdf"
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "application/pdf"
                    },
                    "size": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "order_column": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "MenuItem": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Top menu"
                    }
                },
                "type": "object"
            },
            "NonFormal": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "isced": {
                        "type": "string"
                    },
                    "legal_name": {
                        "type": "string"
                    },
                    "isced_code": {
                        "type": "string"
                    },
                    "gallery": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "organisation": {
                        "$ref": "#/components/schemas/Organisation"
                    }
                },
                "type": "object"
            },
            "NonFormalShow": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "isced": {
                        "type": "string"
                    },
                    "isced_code": {
                        "type": "string"
                    },
                    "gallery": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "organisation": {
                        "$ref": "#/components/schemas/Organisation"
                    },
                    "registration": {
                        "title": "registration",
                        "description": "Registration details",
                        "properties": {
                            "start_date": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-03-26"
                            },
                            "end_date": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-04-26"
                            },
                            "price": {
                                "description": "mixed>",
                                "type": "number",
                                "format": "float",
                                "example": 150
                            },
                            "payment_deadline": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-03-30"
                            }
                        },
                        "type": "object"
                    },
                    "consultation": {
                        "title": "consultation",
                        "description": "Consultation details",
                        "properties": {
                            "start_date": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-05-01"
                            },
                            "end_date": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-05-15"
                            },
                            "price": {
                                "description": "mixed>",
                                "type": "number",
                                "format": "float",
                                "example": 200
                            },
                            "payment_deadline": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-05-10"
                            },
                            "document": {
                                "description": "mixed>",
                                "type": "string",
                                "example": "long text"
                            }
                        },
                        "type": "object"
                    },
                    "evidence": {
                        "title": "evidence",
                        "description": "Evidence submission details",
                        "properties": {
                            "submission_deadline": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-06-01"
                            },
                            "submission_price": {
                                "description": "mixed>",
                                "type": "number",
                                "format": "float",
                                "example": 50
                            },
                            "submission_payment_deadline": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "date",
                                "example": "2025-06-05"
                            },
                            "document": {
                                "description": "mixed>",
                                "type": "string",
                                "example": "evidence.pdf"
                            }
                        },
                        "type": "object"
                    },
                    "general_rules": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "video_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Organisation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "$ref": "#/components/schemas/Region"
                    }
                },
                "type": "object"
            },
            "Overall": {
                "properties": {
                    "space_count": {
                        "type": "integer"
                    },
                    "registered_count": {
                        "type": "integer"
                    },
                    "spec_registered_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Page": {
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "collection_id": {
                        "description": "Attached collection",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Page title",
                        "type": "string",
                        "example": "Contact us"
                    },
                    "meta_title": {
                        "description": "Page meta title",
                        "type": "string",
                        "example": "Contact us"
                    },
                    "content": {
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "Page meta description",
                        "type": "string"
                    },
                    "image": {
                        "description": "MPage main banner/poster",
                        "type": "string"
                    },
                    "position": {
                        "description": "Page index for ordering purposes",
                        "type": "integer"
                    },
                    "parent_id": {
                        "description": "Parent page ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Page creation date time",
                        "type": "string"
                    },
                    "menus": {
                        "title": "Menus",
                        "description": "Relations of menus",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItem"
                        }
                    },
                    "media": {
                        "title": "Medias",
                        "description": "Relations of attachments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaItem"
                        }
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    }
                },
                "type": "object"
            },
            "Partner": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "ident_no": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "company_legal_address": {
                        "type": "string"
                    },
                    "website_url": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramPartner": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "sector": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramWithCommission": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "specialization_code": {
                        "type": "string"
                    },
                    "specialization_name": {
                        "type": "string"
                    },
                    "qualification_name": {
                        "type": "string"
                    },
                    "program_code": {
                        "type": "string"
                    },
                    "program_kind": {
                        "type": "integer"
                    },
                    "address": {
                        "type": "string"
                    },
                    "credits_count": {
                        "type": "string"
                    },
                    "credits_count_non_geo": {
                        "type": "string"
                    },
                    "education_level": {
                        "type": "integer"
                    },
                    "language_id": {
                        "type": "integer"
                    },
                    "is_integrated": {
                        "type": "boolean"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "district_id": {
                        "type": "integer"
                    },
                    "program_duration": {
                        "type": "string"
                    },
                    "program_duration_non_geo": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "partner": {
                        "type": "string"
                    },
                    "video_url": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "gallery": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "commission_members": {
                        "title": "Commission members",
                        "description": "Relations of admission",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "Region": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegistereCount": {
                "properties": {
                    "spec_count": {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResultReview": {
                "properties": {
                    "score": {
                        "type": "integer"
                    },
                    "max": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Schedule": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "program": {
                        "$ref": "#/components/schemas/LongTerm"
                    },
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Selections"
                        }
                    },
                    "spec_edu": {
                        "type": "boolean"
                    },
                    "spec_env": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rofficer": {
                        "type": "string"
                    },
                    "rofficer_doc": {
                        "type": "string"
                    },
                    "select": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "canSelectStatus": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Selection": {
                "properties": {
                    "method": {
                        "$ref": "#/components/schemas/SelectionMethod"
                    },
                    "max_evaluation_score": {
                        "type": "integer"
                    },
                    "min_competence_threshold": {
                        "type": "integer"
                    },
                    "passing_score": {
                        "type": "integer"
                    },
                    "scoring_percentage": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SelectionMethod": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Selections": {
                "properties": {
                    "selection": {
                        "$ref": "#/components/schemas/Selection"
                    },
                    "score": {
                        "type": "number",
                        "format": "float"
                    },
                    "start_at": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ShortProgram": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "isced_code": {
                        "type": "string"
                    },
                    "isced_description": {
                        "type": "string"
                    },
                    "program_kind": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "education_level": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "region": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "program_duration": {
                        "type": "string"
                    },
                    "organisation": {
                        "title": "organisation",
                        "description": "Organisation",
                        "properties": {
                            "id": {
                                "description": "mixed>",
                                "type": "number",
                                "example": 1
                            },
                            "name": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "string",
                                "example": "test"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ShortProgramAdmission": {
                "properties": {
                    "id": {
                        "description": "The ID of the program admission",
                        "type": "integer",
                        "example": 1
                    },
                    "program": {
                        "description": "Details of the program",
                        "properties": {
                            "id": {
                                "description": "Program ID",
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "description": "Program name",
                                "type": "string",
                                "example": "Short Program Example"
                            },
                            "organisation": {
                                "description": "Details of the organisation",
                                "properties": {
                                    "id": {
                                        "description": "Organisation ID",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "name": {
                                        "description": "Organisation name",
                                        "type": "string",
                                        "example": "Example Organisation"
                                    },
                                    "email": {
                                        "description": "Organisation email",
                                        "type": "string",
                                        "example": "test@gmail.com"
                                    },
                                    "phone": {
                                        "description": "Organisation phone",
                                        "type": "string",
                                        "example": "1131243213"
                                    },
                                    "website": {
                                        "description": "Organisation website",
                                        "type": "string",
                                        "example": "test.com"
                                    },
                                    "address": {
                                        "description": "Organisation address",
                                        "type": "string",
                                        "example": "test address"
                                    },
                                    "region": {
                                        "description": "Details of the region",
                                        "properties": {
                                            "id": {
                                                "description": "Region ID",
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "name": {
                                                "description": "Region name",
                                                "type": "string",
                                                "example": "Example Region"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "registration_start_date": {
                        "description": "The start date for registration",
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "registration_end_date": {
                        "description": "The end date for registration",
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-31"
                    },
                    "study_start_date": {
                        "description": "The start date for the study program",
                        "type": "string",
                        "format": "date",
                        "example": "2023-02-01"
                    }
                },
                "type": "object"
            },
            "ShortProgramShow": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "isced_code": {
                        "type": "string"
                    },
                    "isced_description": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "goal": {
                        "type": "string"
                    },
                    "program_kind": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "education_level": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "region": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "program_duration": {
                        "type": "string"
                    },
                    "organisation": {
                        "title": "organisation",
                        "description": "Organisation",
                        "properties": {
                            "id": {
                                "description": "mixed>",
                                "type": "number",
                                "example": 1
                            },
                            "name": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "string",
                                "example": "test"
                            },
                            "email": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "string",
                                "example": "test@gmail.com"
                            },
                            "phone": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "string",
                                "example": "0322121212"
                            },
                            "address": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "string",
                                "example": "test address"
                            },
                            "website": {
                                "description": "mixed>",
                                "type": "string",
                                "format": "string",
                                "example": "https://example.com"
                            }
                        },
                        "type": "object"
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "specialization_code": {
                        "type": "string"
                    },
                    "specialization_name": {
                        "type": "string"
                    },
                    "qualification_name": {
                        "type": "string"
                    },
                    "program_code": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "responsible_person_phone": {
                        "type": "string"
                    },
                    "language_id": {
                        "type": "integer"
                    },
                    "is_integrated": {
                        "type": "boolean"
                    },
                    "district": {
                        "$ref": "#/components/schemas/IdName"
                    },
                    "description": {
                        "type": "string"
                    },
                    "partner": {
                        "type": "string"
                    },
                    "video_url": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "is_eligible": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "registered": {
                        "$ref": "#/components/schemas/RegistereCount"
                    },
                    "gallery": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "partners": {
                        "title": "partners",
                        "description": "Relations of partners",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramPartner"
                        }
                    },
                    "admissions": {
                        "title": "Admission",
                        "description": "Relations of admission",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Admission"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "pid": {
                        "title": "Personal ID",
                        "description": "Personal ID of the user",
                        "type": "string",
                        "example": "01000000000"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Fullname of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "firstName": {
                        "title": "First name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "title": "Last name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "gender of the user",
                        "type": "string",
                        "example": "Male"
                    },
                    "birthDate": {
                        "title": "Birth date",
                        "description": "Birth date of the user",
                        "type": "string",
                        "format": "date",
                        "example": "1999-12-31"
                    },
                    "residential": {
                        "title": "Residential",
                        "description": "Residential of the user",
                        "type": "string",
                        "example": "GE"
                    },
                    "region": {
                        "title": "Region",
                        "description": "Region of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "Robert Robertson, 1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "phone": {
                        "title": "phone",
                        "description": "Phone of the user",
                        "type": "string",
                        "example": "555123456",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "altPhone": {
                        "title": "Alternative phone",
                        "description": "Alternative phone of the user",
                        "type": "string",
                        "example": "555123456",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email",
                        "example": "example@example.com",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo of the user",
                        "type": "string",
                        "example": "/users/photos/qwertyuio.jpg",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "isActive": {
                        "title": "Is active",
                        "description": "Is active user",
                        "type": "boolean",
                        "format": "bool",
                        "example": false
                    },
                    "blockReason": {
                        "title": "Block reason",
                        "description": "Block reason of user",
                        "type": "string",
                        "example": "Some reason",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-27 17:50:45"
                    },
                    "deletedAt": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "VacancyCollection": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "string"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "district": {
                        "type": "integer"
                    },
                    "institution": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "publish_date": {
                        "type": "string"
                    },
                    "deadline_date": {
                        "type": "string"
                    },
                    "is_favorite": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "VacancyResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution": {
                        "type": "string"
                    },
                    "position": {
                        "type": "string"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "hourly_pay_from": {
                        "type": "string"
                    },
                    "hourly_pay_to": {
                        "type": "string"
                    },
                    "hourly_workload_from": {
                        "type": "string"
                    },
                    "hourly_workload_to": {
                        "type": "string"
                    },
                    "selection_stages": {
                        "type": "string"
                    },
                    "vacant_places": {
                        "type": "integer"
                    },
                    "work_format": {
                        "type": "integer"
                    },
                    "responsibilities": {
                        "type": "string"
                    },
                    "basic_requirements": {
                        "type": "string"
                    },
                    "essential_requirements": {
                        "type": "string"
                    },
                    "optional_requirements": {
                        "type": "string"
                    },
                    "additional_information": {
                        "type": "string"
                    },
                    "contact_person": {
                        "type": "integer"
                    },
                    "publish_date": {
                        "type": "string"
                    },
                    "deadline_date": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "is_favorite": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ApplicationReq": {
                "properties": {
                    "positions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "institutions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "allow_email_notifications": {
                        "type": "boolean"
                    },
                    "allow_review_personal_page": {
                        "type": "boolean"
                    },
                    "file": {}
                },
                "type": "object"
            },
            "LoginRequestBody": {
                "required": [
                    "pid",
                    "password"
                ],
                "properties": {
                    "pid": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VacancyReq": {
                "properties": {
                    "position_type": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "string"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "district_id": {
                        "type": "integer"
                    },
                    "institution": {
                        "type": "string"
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "deadline_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "teaching_professional_programs": {
                        "type": "boolean"
                    },
                    "teaching_short_term_programs": {
                        "type": "boolean"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "address": {
                        "type": "string"
                    },
                    "contact_person": {
                        "type": "integer"
                    },
                    "hourly_pay_from": {
                        "type": "number"
                    },
                    "hourly_pay_to": {
                        "type": "number"
                    },
                    "hourly_workload_from": {
                        "type": "string"
                    },
                    "hourly_workload_to": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "selection_stages": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "vacant_places": {
                        "type": "integer"
                    },
                    "work_format": {
                        "type": "integer"
                    },
                    "responsibilities": {
                        "type": "string"
                    },
                    "basic_requirements": {
                        "type": "string"
                    },
                    "essential_requirements": {
                        "type": "string"
                    },
                    "optional_requirements": {
                        "type": "string"
                    },
                    "additional_information": {
                        "type": "string"
                    },
                    "obtaining_authorization": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ValidateCodeRequestBody": {
                "required": [
                    "code",
                    "token"
                ],
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AdmissionRes": {
                "description": "Admission Resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdmissionReq"
                    }
                },
                "type": "object"
            },
            "AdmissionsRes": {
                "description": "Admissions Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdmissionReq"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "description": "Pagination links.",
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "description": "Pagination metadata.",
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ApplicantCollectionRes": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ApplicantCollection"
                    }
                },
                "type": "object"
            },
            "ApplicationResourceRes": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ApplicationResource"
                    }
                },
                "type": "object"
            },
            "CardDataRes": {
                "description": "Page Resource",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/CardRes"
                    }
                },
                "type": "object"
            },
            "CardRes": {
                "description": "Page Resource",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CardPrograms"
                        }
                    }
                },
                "type": "object"
            },
            "CollectionItemsRes": {
                "title": "collectionItemResource",
                "description": "Collection items resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionItem"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "collectionItemsResource"
                }
            },
            "LongTermRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/LongTerm"
                    }
                },
                "type": "object"
            },
            "LongTermsRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LongTerm"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "description": "Pagination links.",
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "description": "Pagination metadata.",
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "description": "Filters applied to admissions.",
                                    "type": "string",
                                    "example": "text"
                                },
                                "selected": {
                                    "type": "string",
                                    "example": null,
                                    "nullable": true
                                },
                                "key": {
                                    "type": "string",
                                    "example": "program_name"
                                },
                                "values": {
                                    "type": "string",
                                    "example": "*"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "MyCommissionReviewRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramWithCommission"
                        }
                    }
                },
                "type": "object"
            },
            "NonFormalRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/NonFormalShow"
                    }
                },
                "type": "object"
            },
            "NonFormalsRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NonFormal"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "description": "Pagination links.",
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "description": "Pagination metadata.",
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "description": "Filters applied to admissions.",
                                    "type": "string",
                                    "example": "text"
                                },
                                "selected": {
                                    "type": "string",
                                    "example": null,
                                    "nullable": true
                                },
                                "key": {
                                    "type": "string",
                                    "example": "program_name"
                                },
                                "values": {
                                    "type": "string",
                                    "example": "*"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PagesRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    }
                },
                "type": "object"
            },
            "PartnerRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Partner"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramShortAdmissionRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShortProgramAdmission"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "description": "Pagination links.",
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "description": "Pagination metadata.",
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProgramsWithCommissionsRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramWithCommission"
                        }
                    }
                },
                "type": "object"
            },
            "ScheduleRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Schedule"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "description": "Pagination links.",
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "description": "Pagination metadata.",
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "description": "Filters applied to admissions.",
                                    "type": "string",
                                    "example": "text"
                                },
                                "selected": {
                                    "type": "string",
                                    "example": null,
                                    "nullable": true
                                },
                                "key": {
                                    "type": "string",
                                    "example": "program_name"
                                },
                                "values": {
                                    "type": "string",
                                    "example": "*"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ShortProgramRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShortProgram"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "description": "Pagination links.",
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "description": "Pagination metadata.",
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "description": "Filters applied to admissions.",
                                    "type": "string",
                                    "example": "text"
                                },
                                "selected": {
                                    "type": "string",
                                    "example": null,
                                    "nullable": true
                                },
                                "key": {
                                    "type": "string",
                                    "example": "program_name"
                                },
                                "values": {
                                    "type": "string",
                                    "example": "*"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ShortProgramShowRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ShortProgramShow"
                    }
                },
                "type": "object"
            },
            "StatRes": {
                "description": "Page Resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LongTerm"
                        }
                    },
                    "overall": {
                        "$ref": "#/components/schemas/Overall"
                    },
                    "organisations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdName"
                        }
                    }
                },
                "type": "object"
            },
            "UserLogin2FaResponseBody": {
                "required": [
                    "status",
                    "msg",
                    "phone_mask",
                    "token"
                ],
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "phone_mask": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserLoginResponseBody": {
                "required": [
                    "access_token",
                    "token_type",
                    "expires_in",
                    "refresh_token"
                ],
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserRes": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "UsersRes": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "VacancyCollectionRes": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VacancyCollection"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "VacancyResourceRes": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/VacancyResource"
                    }
                },
                "type": "object"
            },
            "UserReq": {
                "title": "User request",
                "description": "User request body data",
                "required": [
                    "pid",
                    "phone",
                    "first_name",
                    "last_name",
                    "gender",
                    "birth_date",
                    "residential"
                ],
                "properties": {
                    "pid": {
                        "title": "Personal Id",
                        "description": "Personal Id of project",
                        "type": "string",
                        "example": "01000000000"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone number",
                        "type": "string",
                        "example": "555123456"
                    },
                    "first_name": {
                        "title": "First name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "gender of the user",
                        "type": "string",
                        "example": "male",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "birth_date": {
                        "title": "Birth date",
                        "description": "Birth date of the user",
                        "type": "string",
                        "format": "date",
                        "example": "1999-12-31"
                    },
                    "residential": {
                        "title": "Residential",
                        "description": "Residential of the user",
                        "type": "string",
                        "example": "GE"
                    },
                    "region": {
                        "title": "Region",
                        "description": "Region of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "Robert Robertson, 1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "alt_phone": {
                        "title": "Alternative phone",
                        "description": "Alternative phone of the user",
                        "type": "string",
                        "example": "555123456",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email",
                        "example": "example@example.com",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "sms_code": {
                        "title": "Sms code",
                        "description": "2fa code of the user",
                        "type": "string",
                        "example": "1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password_confirmation": {
                        "title": "Password confirmation",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "password",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo of the user",
                        "type": "string",
                        "example": "base64 string",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UserUpdateReq": {
                "title": "User update request",
                "description": "User update request body data",
                "properties": {
                    "pid": {
                        "title": "Personal Id",
                        "description": "Personal Id of project",
                        "type": "string",
                        "example": "01000000000"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone number",
                        "type": "string",
                        "example": "555123456"
                    },
                    "first_name": {
                        "title": "First name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "gender of the user",
                        "type": "string",
                        "example": "male",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "birth_date": {
                        "title": "Birth date",
                        "description": "Birth date of the user",
                        "type": "string",
                        "format": "date",
                        "example": "1999-12-31"
                    },
                    "residential": {
                        "title": "Residential",
                        "description": "Residential of the user",
                        "type": "string",
                        "example": "GE"
                    },
                    "region": {
                        "title": "Region",
                        "description": "Region of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "Tbilisi",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "Robert Robertson, 1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "alt_phone": {
                        "title": "Alternative phone",
                        "description": "Alternative phone of the user",
                        "type": "string",
                        "example": "555123456",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email",
                        "example": "example@example.com",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "sms_code": {
                        "title": "Sms code",
                        "description": "2fa code of the user",
                        "type": "string",
                        "example": "1234",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password_confirmation": {
                        "title": "Password confirmation",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "password",
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo of the user",
                        "type": "string",
                        "example": "base64 string",
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        "examples": {
            "default | static | page": {
                "summary": "Page type"
            },
            "2024-12-30 13:00:00": {
                "summary": "Page creation date time"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "VET",
            "description": "API Endpoints of Projects"
        }
    ]
}